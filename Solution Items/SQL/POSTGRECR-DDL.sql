/* 
 * POSTGRECR - MARC-HI CLIENT REGISTRY DATABASE SCHEMA FOR POSTGRESQL
 * VERSION: 2.0
 * AUTHOR: JUSTIN FYFE
 * DATE: JULY 12, 2012
 * FILES:
 *	POSTGRECR-DDL.SQL	- SQL CODE TO CREATE TABLES, INDECIES, VIEWS AND SEQUENCES
 *	POSTGRECR-SRCH.SQL	- SQL CODE TO CREATE SEARCH FUNCTIONS
 *	POSTGRESHR-FX.SQL	- SQL CODE TO CREATE SUPPORT PROCEDURES AND FUNCTIONS
 * DESCRIPTION:
 *	THIS FILE CLEANS AND THEN RE-CREATES THE POSTGRESQL CLIENT REGISTRY
 *	DATABASE SCHEMA INCLUDING TABLES, VIEWS, INDECIES AND SEQUENCES. 
 * LICENSE:
 * 	Licensed under the Apache License, Version 2.0 (the "License");
 * 	you may not use this file except in compliance with the License.
 * 	You may obtain a copy of the License at
 *
 *     		http://www.apache.org/licenses/LICENSE-2.0
 *
 * 	Unless required by applicable law or agreed to in writing, software
 * 	distributed under the License is distributed on an "AS IS" BASIS,
 * 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 	See the License for the specific language governing permissions and
 * 	limitations under the License.
 */

-- @DATABASE
-- CREATES THE DATABASE AND MODIFIES THE OWNER TO THE APPROPRIATE USER
-- CREATE DATABASE pgCR OWNER pgCR;

-- @LANGUAGE
-- REGISTER THE PLPGSQL LANGUAGE
CREATE LANGUAGE PLPGSQL;

-- CORRECTS THE BYTEA ENCODING PROBLEM ON POSTGRESQL 9.X
SET bytea output = ESCAPE;

-- CLEAN TABLES
DROP TABLE TS_TBL CASCADE;
DROP TABLE CD_TBL CASCADE;
DROP TABLE PSN_VRSN_TBL CASCADE;
DROP TABLE PSN_TBL CASCADE;
DROP TABLE TEL_TBL CASCADE;
DROP TABLE ADDR_CMP_TBL CASCADE;
DROP TABLE ADDR_SET_TBL CASCADE;
DROP TABLE NAME_CMP_TBL CASCADE;
DROP TABLE CMP_TBL CASCADE;

-- CLEAN SEQUENCES
DROP SEQUENCE PSN_SEQ;
DROP SEQUENCE TEL_SEQ;
DROP SEQUENCE TS_SEQ;
DROP SEQUENCE CD_SEQ;
DROP SEQUENCE ADDR_CMP_SEQ;
DROP SEQUENCE ADDR_SET_SEQ;
DROP SEQUENCE NAME_CMP_SEQ;
DROP TABLE CMP_SEQ;

-- @SEQUENCE
-- TIME STAMP COMPONENT TABLE IDENTIFIER
CREATE SEQUENCE TS_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
--
-- TIMESTAMP COMPONENT TABLE
-- 
-- PURPOSE: COMPLEX TIMES MAY BE REPRESENTED WITHIN THE HEALTH CARE DOMAIN. FOR EXAMPLE, ONE SERVICE EVENT MAY HAVE
--	    AN EFFECTIVE TIME AT ONE FIXED POINT IN TIME (JUN 11 2009), HOWEVER OTHERS (SUCH AS A STAY IN HOSPITAL) MAY
--	    HAVE A RANGE SPECIFIED. IT IS FOR THIS REASON THAT WE CHOOSE TO IMPLEMENT A TIME STAMP COMPONENT TABLE
--
CREATE TABLE TS_TBL
(
	TS_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('TS_SEQ'), -- UNIQUELY IDENTIFIES THIS TIMESTAMP
	TS_VALUE	TIMESTAMPTZ NOT NULL, -- IDENTIFIES THE VALUE OF THE TIMESTAMP
	TS_PRECISION	CHAR(1) NOT NULL DEFAULT 'F', -- IDENTIFIES THE PRECISION OF THE TIMESTAMP
	TS_CLS		CHAR(1) NOT NULL DEFAULT 'S', -- CLASSIFIES THE TYPE OF TIMESTAMP COMPONENT
	TS_SET_ID	DECIMAL(20,0), -- USED TO CORRELATE DISPARATE TIME COMPONENTS TOGETHER,
	CONSTRAINT PK_TS_TBL PRIMARY KEY (TS_ID),
	CONSTRAINT CK_TS_PRECISION CHECK (TS_PRECISION IN ('Y','M','D','H','m','S','F')), -- ALLOWED VALUES FOR PRECISION:
	--	Y	- YEAR
	--	M	- MONTH
	--	D	- DAY
	--	H	- HOUR
	--	m	- MINUTES
	--	S	- SECONDS
	--	F	- FRACTION SECTIONDS (MILLISECTIONS)
	CONSTRAINT CK_TS_CLS CHECK (TS_CLS IN ('S','L','U','W')) -- ALLOWED VALUES FOR CLASSIFICATION
	--	S	- JUST A SET COMPONENT
	--	L	- LOWER BOUND
	--	U	- UPPER BOUND
	--	W	- WIDTH
);

-- @INDEX
-- USING THE VALUES
CREATE INDEX TS_TBL_TS_VALUE_IDX ON TS_TBL (TS_VALUE);

-- @INDEX
-- LOOKUP BY TIME SET SEQUENCE SHOULD BE INDEXED
CREATE INDEX TS_TBL_TS_SET_ID_IDX ON TS_TBL(TS_SET_ID);

-- @SEQUENCE
-- CONCEPT DESCRIPTOR CODE TABLE STORAGE IDENTIFIER
CREATE SEQUENCE CD_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
--
-- THE CONCEPT DESCRIPTOR TABLE
--
-- PURPOSE: COMPLEX CODE SYSTEMS (SUCH AS SNOMED CT) ARE HIERARCHICAL IN NATURE AND ARE MADE UP OF MANY COMPONENTS,
--	    THIS MAKES IT DIFFICULT TO STORE THEM INLINE WITHIN A TABLE. THAT IS THE SOLE PURPOSE OF THIS TABLE, TO
--	    REGISTER CODES THAT ARE USED WITHIN THE SHARED HEALTH RECORD DATA.
--
CREATE TABLE CD_TBL
(
	CD_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('CD_SEQ'), -- UNIQUE IDENTIFIER OF THE CODE BEING USED
	CD_VAL		VARCHAR(20) NOT NULL, -- THE VALUE OF THE CODE
	CD_DOMAIN 	VARCHAR(48),  -- THE DOMAIN FROM WHICH THE CODE WAS SELECTED
	ORG_CNT_TYP	VARCHAR(48), -- THE CONTENT/TYPE OF THE ORIGINAL TEXT
	ORG_TEXT   	BYTEA, -- THE ORIGINAL TEXT OR MULTIMEDIA BEHIND THE REASON FOR SELECTING THE CODE
	CD_VRSN		VARCHAR(20), -- IDENTIFIES THE VERSION OF THE CODE DOMAIN FROM WHICH THE CODE WAS SELECTED
	CD_QLFYS	DECIMAL(20,0), -- IDENTIFIES THE CODE THAT THIS CODE TUPLE QUALIFIES
	CD_QLFYS_AS	CHAR(1), -- IDENTIFIES HOW THE CODE QUALIFIES
	CD_QLFYS_KV_ID	VARCHAR(48), -- IDENTIFIES THE KEY/VALUE CORRELATION ID
	CONSTRAINT PK_CD_TBL PRIMARY KEY (CD_ID),
	CONSTRAINT FK_CD_QLFYS_CD_TBL FOREIGN KEY (CD_QLFYS) REFERENCES CD_TBL(CD_ID)
);

-- @INDEX
-- MAY NEED TO LOOKUP CODES BASED ON THE CODE THAT THEY QUALIFY
CREATE INDEX CD_TBL_CD_QLFYS_IDX ON CD_TBL(CD_QLFYS);

-- @INDEX
-- LOOKUP BY CODE SYSTEM AND CODE
CREATE INDEX CD_TBL_CD_CD_DOMAIN_IDX ON CD_TBL(CD_DOMAIN, CD_VAL);

-- @SEQUENCE
-- THE SEQUENCE FOR THE PERSON OBJECT
CREATE SEQUENCE PSN_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- PERSON TABLE
--
-- PURPOSE: A PERSON IS AN ENTITY WHICH IS LIVING AND BREATHING. IN THIS CLIENT REGISTRY 
--	    MODEL THE PERSON TABLE STORES THE MASTER PERSON IDENTIFIER AND ALL DATA IS 
--	    STORED AS VERSION IN THE PERSON VERSION TABLE
--
CREATE TABLE PSN_TBL
(
	PSN_ID	DECIMAL(20,0) NOT NULL DEFAULT nextval('PSN_SEQ'), -- THE IDENTIFIER FOR THE PERSON RECORD
	CONSTRAINT PK_PSN_TBL PRIMARY KEY (PSN_ID)
);

-- @SEQUENCE 
-- PERSON VERSION SEQUENCE
CREATE SEQUENCE PSN_VRSN_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- PERSON VERSION TABLE
-- 
-- PURPOSE: THE CLIENT REGISTRY DATA MODEL IS VERSIONED AND EACH PERSON RECORD MAY CONTAIN
--	    MANY VERSIONS
CREATE TABLE PSN_VRSN_TBL
(
	VRSN_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('PSN_VRSN_SEQ'), -- THE IDENTIFIER FOR THE VERSION 
	PSN_ID		DECIMAL(20,0) NOT NULL, -- THE IDENTIFIER OF THE PERSON TO WHICH THIS VERISON APPLIES
	RPLC_VRSN_ID	DECIMAL(20,0), -- THE IDENTIFIER OF THE VERSION THAT THIS VERSION REPLACES
	STATUS		VARCHAR(12) NOT NULL DEFAULT 'Active', -- THE STATUS OF THE VERSION
	CRT_UTC		TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIME, -- THE TIME THAT THE VERSION WAS CREATED
	OBSLT_UTC	TIMESTAMPTZ, -- THE TIMESTAMP AT WHICH TIME THE RECORD DID OR WILL BECOME OBSOLETE
	GNDR_CS		CHAR(1) NOT NULL, -- THE GENDER CODE OF THE PERSON AS OF THE CURRENT VERSION
	BRTH_TS		TIMESTAMPTZ, -- IDENTIFIES WHEN THE PERSON WAS BORN OR PURPORTED TO BE BORN
	DCSD_TS		TIMESTAMPTZ, -- IDENTIFIES WHEN THE PERSON BECAME DECEASED
	MB_ORD		DECIMAL(2), -- IDENTIFIES THE ORDER OF A MULTIPLE BIRTH
	RLGN_CD		DECIMAL(20,0), -- IDENTIFIES THE RELIGION CODE
	CONSTRAINT PK_PSN_VRSN_TBL PRIMARY KEY (VRSN_ID),
	CONSTRAINT FK_PSN_PSN_VRSN_TBL FOREIGN KEY (PSN_ID) REFERENCES PSN_TBL(PSN_ID),
	CONSTRAINT FK_RPLC_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES PSN_VRSN_TBL(VSN_ID),
	CONSTRAINT FK_RLGN_CD_CD_TBL FOREIGN KEY (RLGN_CD) REFERENCES CD_TBL(CD_ID)
);
	
-- @SEQUENCE
-- ADDRESS SET TABLE IDENTIFIER SEQUENCE
CREATE SEQUENCE ADDR_SET_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- ADDRESS SET TABLE
--
-- PURPOSE: THE ADDRESS SETS WILL HAVE COMMON DATA THAT APPLIES TO ALL COMPONENTS IN THE SET
--  	    THIS TABLE ENSURES THAT THIS DATA CAN BE STORED. USES THE SAME SEQUENCE AS THE COMPONENT
--
CREATE TABLE ADDR_SET_TBL
(
	ADDR_SET_ID	DECIMAL(20,0) NOT NULL DEFAULT nextval('ADDR_SET_SEQ'), -- THE IDENTIFIER FOR THE SEQUENCE
	ADDR_SET_USE	VARCHAR(4) NOT NULL, -- THE PRIMARY USE OF THE ADDRESS
	CLNT_VRSN_ID	DECIMAL(20,0) NOT NULL, -- THE VERSION OF THE CLIENT RECORD TO WHICH THIS ADDRESS SET APPLIES
	CONSTRAINT PK_ADDR_SET_TBL PRIMARY KEY (ADDR_SET_ID),
	CONSTRAINT FK_ADDR_SET_CLNT_VRSN_TBL FOREIGN KEY (PSN_VRSN_ID) REFERENCE CLNT_VRSN_TBL(CLNT_VRSN_ID)
);
	
-- @SEQUENCE
-- ADDRESS COMPONENT TABLE IDENTIFIER SEQUENCE
CREATE SEQUENCE ADDR_CMP_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- THE ADDRESS COMPONENT TABLE
--
-- PURPOSE: THE ADDRESS COMPONENT TABLE ALLOWS ADDRESSES TO BE STORED IN A COMPONENTIZED WAY. EACH ADDRESS CAN 
--	    BE MADE UP OF DIFFERENT COMPONENTS AND CAN BE LINKED TOGETHER IN AN ADDRESS SET
--
CREATE TABLE ADDR_CMP_TBL
(
	ADDR_CMP_ID	DECIMAL(20,0) NOT NULL DEFAULT nextval('ADDR_CMP_SEQ'), -- THE ADDRESS COMPONENT ID
	ADDR_CMP_CLS	DECIMAL(4) NOT NULL DEFAULT 1, -- THE ADDRESS COMPONENT CLASSIFICATION TYPE
	ADDR_CMP_VALUE	VARCHAR(255) NOT NULL, -- THE VALUE OF THE ADDRESS COMPONENT
	ADDR_SET_ID	DECIMAL(20,0), -- USED TO CORRELATE ONE OR MORE ADDRESS COMPONENTS INTO A SET
	CONSTRAINT PK_ADDR_CMP_TBL PRIMARY KEY (ADDR_CMP_ID),
	CONSTRAINT FK_ADDR_CMP_SET_TBL FOREIGN KEY (ADDR_SET_ID) REFERENCES ADDR_SET_TBL(ADDR_SET_ID)
);

-- @INDEX
-- LOOKUP BY ADDRESS SET
CREATE INDEX ADDR_CMP_TBML_ADDR_SET_ID_IDX ON ADDR_CMP_TBL(ADDR_SET_ID);


-- @SEQUENCE
-- THE NAME COMPONENT TABLE IDENTIFIER
CREATE SEQUENCE NAME_CMP_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- THE NAME COMPONENT TABLE
--
-- PURPOSE: THE NAME COMPONENT TABLE ALLOWS FOR THE STORAGE OF COMPLEX NAME COMPONENTS
--
CREATE TABLE NAME_CMP_TBL
(
	NAME_CMP_ID	DECIMAL(20, 0) NOT NULL DEFAULT nextval('NAME_CMP_TBL'), -- THE NAME COMPONENT ID
	NAME_CMP_CLS	DECIMAL(4) NOT NULL DEFAULT 1, -- THE NAME COMPONENT TYPE
	NAME_CMP_VALUE	VARCHAR(255) NOT NULL, -- THE VALUE OF THE NAME COMPONENT
	NAME_SET_ID	DECIMAL(20,0), -- USED TO CORRELATE ONE OR MORE NAME COMPONENTS TOGETHER
	CONSTRAINT PK_NAME_CMP_TBL PRIMARY KEY (NAME_CMP_ID)
);

-- @INDEX
-- LOOKUP BY NAME SET ID SHOULD BE INDEXED
CREATE INDEX NAME_CMP_TBL_NAME_SET_ID_IDX ON NAME_CMP_TBL(NAME_SET_ID);


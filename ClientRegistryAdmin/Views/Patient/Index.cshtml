@model ClientRegistryAdmin.Models.PatientSearchModel
@{
    ViewBag.Title = "Patient Administration";
    Layout = "~/Views/Shared/_PatientLayout.cshtml";
}

@section PatientView
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Recent Registration Events</h3>
        </div>
        <div class="panel-body">
            <em>Shows patients created or modified in the last day</em>
            @if (Model.IsError)
            {
                <div class="alert alert-danger">
                    An error occurred executing the search against the Client Registry
                </div>
            }
            else if(Model.Outcome != null)
            {
                var grid = new System.Web.Helpers.WebGrid(Model.Outcome, defaultSort: "DateOfBirth", rowsPerPage: 10, selectionFieldName: "Id");
                grid.Pager(WebGridPagerModes.All, "First", "Previous", "Next", "Last");

                @grid.GetHtml(
                    tableStyle: "table table-striped",
                    mode: WebGridPagerModes.Numeric,
                    footerStyle: "grid-footer",
                    headerStyle: "grid-header",
                    htmlAttributes: new { id = "resultTable" },
                    columns: grid.Columns(
                    grid.Column(
                    columnName: "Id",
                    header: "Id",
                    style: "width:20%",
                    format: item => Html.ActionLink((String)item.Id.ToString(), "View", "Patient", new { id = item.RegistrationId }, new object())
                    ),
                    grid.Column(
                    columnName: "Name",
                    header: "Name",
                    style: "width:30%",
                                format: item => Html.ActionLink((String)String.Format("{0}, {1}", item.FamilyName, item.GivenName), "View", "Patient", new { id = item.RegistrationId }, new object())
                        ),
                        grid.Column(
                            columnName: "DateOfBirth",
                        header: "DOB",
                        style: "width:30%",
                            format: item => new HtmlString((String)item.DateOfBirth.ToString("yyyy-MMM-dd"))
                            ),
                            grid.Column(
                        columnName: "Gender",
                        header: "Gender",
                        style: "width:10%"
                        ),
                        grid.Column(
                        columnName: "Address",
                        header: "Address",
                        style: "width:30%",
                            format: item => new HtmlString(String.Format("{0}, {1}", item.City, item.State))
                        )
                    )
                )
            }
        </div>
    </div>
}